euclideangenerators.jl:struct Euclidean{T<:Real, U<:AbstractMatrix{T}, V<:Real, W<:Real, X<:Real, R<:AbstractGraphGenerator} <: RandomGenerator
randomgenerators.jl:struct ErdosRenyi{T<:Integer, U<:Real, R<:AbstractRNG} <: RandomGenerator
randomgenerators.jl:struct ApproxErdosRenyi{T<:Integer, U<:Integer, R<:AbstractRNG} <: RandomGenerator
randomgenerators.jl:struct ExpectedDegree{T<:Real, U<:AbstractVector{T}, R<:AbstractRNG} <: RandomGenerator
randomgenerators.jl:struct WattsStrogatz{T<:Integer, U<:Integer, V<:Real, R<:AbstractRNG} <: RandomGenerator
randomgenerators.jl:struct BarabasiAlbert{T<:Integer, AG<:AbstractGraph{T}, R<:AbstractRNG} <: RandomGenerator
randomgenerators.jl:struct StaticFitnessModel{T<:Integer, U<:AbstractVector{T}, R<:AbstractRNG} <: RandomGenerator
randomgenerators.jl:struct StaticScaleFree{T<:Integer, U<:Integer, V<:Real, R<:AbstractRNG} <: RandomGenerator
randomgenerators.jl:struct RandomRegular{T<:Integer, U<:Integer, R<:AbstractRNG}
randomgenerators.jl:struct RandomConfigurationModel{T<:Integer, U<:AbstractVector{T}, R<:AbstractRNG} <: RandomGenerator
randomgenerators.jl:struct Tournament{T<:Integer, R<:AbstractRNG} <: RandomGenerator
randomgenerators.jl:struct Kronecker{T<:Integer, U<:Real, R<:AbstractRNG} <: RandomGenerator
randomgenerators.jl:struct DorogovtsevMendes{T<:Integer, R<:AbstractRNG} <: RandomGenerator
randomgenerators.jl:struct RandomOrientationDAG{T::Integer, AG::AbstractGraph{T}, R::AbstractRNG} <: RandomGenerator
smallgenerators.jl:struct Bull <: SmallGraph end
smallgenerators.jl:struct Chvatal <: SmallGraph end
smallgenerators.jl:struct cubical <: SmallGraph end
smallgenerators.jl:struct Desargues <: SmallGraph end
smallgenerators.jl:struct Diamond <: SmallGraph end
smallgenerators.jl:struct Dodecahedral <: SmallGraph end
smallgenerators.jl:struct Frucht <: SmallGraph end
smallgenerators.jl:struct Heawood <: SmallGraph end
smallgenerators.jl:struct House <: SmallGraph end
smallgenerators.jl:struct Housex <: SmallGraph end
smallgenerators.jl:struct Icosahedral <: SmallGraph end
smallgenerators.jl:struct Karate <: SmallGraph end
smallgenerators.jl:struct KrackhardtKite <: SmallGraph end
smallgenerators.jl:struct MoebiusKantor <: SmallGraph end
smallgenerators.jl:struct Octahedral <: SmallGraph end
smallgenerators.jl:struct Pappus <: SmallGraph end
smallgenerators.jl:struct Petersen <: SmallGraph end
smallgenerators.jl:struct SedgewickMaze <: SmallGraph end
smallgenerators.jl:struct Tetrahedral <: SmallGraph end
smallgenerators.jl:struct TruncatedCube <: SmallGraph end
smallgenerators.jl:struct TruncatedTetrahedron <: SmallGraph end
smallgenerators.jl:struct Tutte <: SmallGraph end
staticgenerators.jl:struct Complete{T<:Integer} <: StaticGenerator
staticgenerators.jl:struct CompleteBipartite{T<:Integer} <: StaticGenerator
staticgenerators.jl:struct CompleteMultipartite{T<:Integer, U<:AbstractVector{T}} <: StaticGenerator
staticgenerators.jl:struct Turan{T<:Integer, U<:AbstractVector{T}} <: StaticGenerator
staticgenerators.jl:struct Star{T<:Integer} <: StaticGenerator
staticgenerators.jl:struct Path{T<:Integer} <: StaticGenerator
staticgenerators.jl:struct Cycle{T<:Integer} <: StaticGenerator
staticgenerators.jl:struct Wheel{T<:Integer} <: StaticGenerator
staticgenerators.jl:struct Grid{T<:Integer, U<:AbstractVector{T}} <: StaticGenerator
staticgenerators.jl:struct BinaryTree{T<:Integer} <: StaticGenerator
staticgenerators.jl:struct DoubleBinaryTree{T<:Integer} <: StaticGenerator
staticgenerators.jl:struct Roach{T<:Integer} <: StaticGenerator
staticgenerators.jl:struct Clique{T<:Integer} <: StaticGenerator
staticgenerators.jl:struct Ladder{T<:Integer} <: StaticGenerator
staticgenerators.jl:struct CircularLadder{T<:Integer} <: StaticGenerator
staticgenerators.jl:struct Barbell{T<:Integer} <: StaticGenerator
staticgenerators.jl:struct Lollipop{T<:Integer} <: StaticGenerator
staticgenerators.jl:struct Circulant{T<:Integer, U<:AbstractVector{T}} <: StaticGenerator
staticgenerators.jl:struct Friendship{T<:Integer} <: StaticGenerator
